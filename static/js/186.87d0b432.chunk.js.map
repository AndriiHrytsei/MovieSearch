{"version":3,"file":"static/js/186.87d0b432.chunk.js","mappings":"qPAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAU,mCAAG,WAAMC,GAAN,8EACjBJ,EAAU,WADO,mBAGQK,EAAAA,EAAAA,GAAU,sCAAD,OAAuCD,EAAvC,sDAHjB,OAGTE,EAHS,OAIfR,EAAS,SACTF,EAAWU,EAASC,SACpBP,EAAU,YANK,kDAQfF,EAAS,KAAMU,SACfR,EAAU,YATK,0DAAH,sDAiBhB,OAJAS,EAAAA,EAAAA,YAAU,WACRN,EAAWF,EACZ,GAAE,CAACA,IAEW,YAAXF,GACK,sCAEM,aAAXA,GACK,uBAAIF,IAEE,aAAXE,EACqB,IAAnBJ,EAAQe,QACH,iDAGP,wBACGf,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOR,GADC,WANzB,CAgBD,C,qFCjDc,SAAeC,EAA9B,+CAAe,OAAf,oBAAe,WAAyBU,GAAzB,kGAEQC,MAAMD,GAFd,cAELE,EAFK,gBAGYA,EAAKC,OAHjB,cAGLZ,EAHK,yBAIJA,GAJI,2DAMJa,QAAQC,OAAO,IAAIC,MAAM,KAAMb,WAN3B,iF,sBCAf,SAASc,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOjC,GAEP,YADAuB,EAAOvB,EAET,CAEIgC,EAAKE,KACPP,EAAQM,GAERX,QAAQK,QAAQM,GAAOE,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAInB,SAAQ,SAAUK,EAASJ,GACpC,IAAIG,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","fetchData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport fetchData from '../../fetchData'\nimport { useParams } from \"react-router-dom\";\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle')\n  const { movieId } = useParams()\n\n  const getReviews = async id => {\n    setStatus('pending')\n    try {\n      const response = await fetchData(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=ee0ed139d0a1d8fcbabd26e40efda78c`)\n      setError('false')\n      setReviews(response.results)\n      setStatus('resolved')\n    } catch (error) {\n      setError(error.message)\n      setStatus('rejected')\n    }\n  }\n\n  useEffect(() => {\n    getReviews(movieId)\n  }, [movieId])\n\n  if (status === 'pending') {\n    return <p>Loading...</p>\n  }\n  if (status === 'rejected') {\n    return <p>{error}</p>\n  }\n  if (status === 'resolved') {\n    if (reviews.length === 0) {\n      return <p>No reviews available</p>\n    }\n    return (\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h4>{review.author}</h4>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    )\n  }\n\n}\n","export default async function fetchData(api) {\n  try {\n    const data = await fetch(api);\n    const response = await data.json();\n    return response;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","useState","reviews","setReviews","error","setError","status","setStatus","movieId","useParams","getReviews","id","fetchData","response","results","message","useEffect","length","map","review","author","content","api","fetch","data","json","Promise","reject","Error","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}