{"version":3,"file":"static/js/456.58ebf9ca.chunk.js","mappings":"wMAGe,SAASA,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMH,SAViB,SAAAI,GACvBA,EAAEC,iBACmB,KAAjBH,EAAMI,SAGVN,EAASE,GACTC,EAAS,IACV,EAGC,WACE,kBAAOI,KAAK,OAAOC,KAAK,cAAcC,GAAG,cAAcC,UAAQ,EAACC,WAAS,EAACC,SAAU,SAACR,GAAD,OAAOD,EAASC,EAAES,cAAcC,MAAhC,KACpF,mBAAQP,KAAK,SAAb,sBAGL,C,gDChBc,SAASQ,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAClC,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,MAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAA4BnB,EAAAA,EAAAA,UAAS,QAArC,eAAOoB,EAAP,KAAeC,EAAf,KAEMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBF,EAAU,WADS,mBAGMG,EAAAA,EAAAA,GAAU,mDAAD,OACqBD,EADrB,8CAHf,OAGXE,EAHW,OAMjBR,EAAUQ,EAASC,SACnBL,EAAU,YACVF,GAAS,GARQ,kDAUjBA,EAAS,KAAMQ,SACfN,EAAU,YAXO,0DAAH,sDAmBlB,OAJAO,EAAAA,EAAAA,YAAU,WACRN,EAAaP,EACd,GAAE,CAACA,IAEW,YAAXK,GACK,sCAEM,aAAXA,GACK,uBAAIF,IAEE,aAAXE,GAEA,wBACGJ,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,UAAKD,EAAMtB,IAAtB,SAA6BsB,EAAME,OAASF,EAAMvB,QAD3CuB,EAAMtB,GADA,WAHvB,CAWD,CC1Cc,SAASyB,IACtB,OAA0BjC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,6BACE,SAACJ,EAAD,CAAYC,SAAU,SAAAE,GAAK,OAAIC,EAASD,EAAb,KAC3B,SAACa,EAAD,CAAWC,KAAMd,MAGtB,C,qFCbc,SAAeuB,EAA9B,+CAAe,OAAf,oBAAe,WAAyBU,GAAzB,kGAEQC,MAAMD,GAFd,cAELnB,EAFK,gBAGYA,EAAKqB,OAHjB,cAGLX,EAHK,yBAIJA,GAJI,2DAMJY,QAAQC,OAAO,IAAIC,MAAM,KAAMZ,WAN3B,iF,sBCAf,SAASa,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBjC,EAAQkC,EAAKlC,KAInB,CAHE,MAAOK,GAEP,YADAoB,EAAOpB,EAET,CAEI6B,EAAKC,KACPN,EAAQ7B,GAERwB,QAAQK,QAAQ7B,GAAOoC,KAAKN,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIlB,SAAQ,SAAUK,EAASJ,GACpC,IAAIG,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAM9B,GACb2B,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQ,OAAQ/B,EAClE,CAEA,SAAS+B,EAAOa,GACdjB,EAAmBC,EAAKC,EAASJ,EAAQK,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["components/SearchForm/SearchForm.jsx","components/MovieList/MovieList.jsx","components/pages/Movies/Movies.jsx","fetchData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport default function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return;\n    }\n    onSubmit(query);\n    setQuery('')\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <input type=\"text\" name=\"searchInput\" id=\"searchInput\" required autoFocus onChange={(e) => setQuery(e.currentTarget.value)}/>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}","import { NavLink } from 'react-router-dom';\nimport fetchData from '../../fetchData';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function MovieList({ data }) {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const searchMovies = async q => {\n    setStatus('pending');\n    try {\n      const response = await fetchData(\n        `https://api.themoviedb.org/3/search/movie?query=${q}&api_key=ee0ed139d0a1d8fcbabd26e40efda78c`\n      );\n      setMovies(response.results);\n      setStatus('resolved');\n      setError(false);\n    } catch (error) {\n      setError(error.message);\n      setStatus('rejected');\n    }\n  };\n\n  useEffect(() => {\n    searchMovies(data);\n  }, [data]);\n\n  if (status === 'pending') {\n    return <p>Loading...</p>;\n  }\n  if (status === 'rejected') {\n    return <p>{error}</p>;\n  }\n  if (status === 'resolved') {\n    return (\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <NavLink to={`${movie.id}`}>{movie.title || movie.name}</NavLink>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nMovieList.propTypes = {\n  data: PropTypes.string.isRequired\n};\n","import { useState } from 'react';\nimport SearchForm from '../../SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n\n  return (\n    <main>\n      <SearchForm onSubmit={query => setQuery(query)} />\n      <MovieList data={query} />\n    </main>\n  );\n}\n","export default async function fetchData(api) {\n  try {\n    const data = await fetch(api);\n    const response = await data.json();\n    return response;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","trim","type","name","id","required","autoFocus","onChange","currentTarget","value","MovieList","data","movies","setMovies","error","setError","status","setStatus","searchMovies","q","fetchData","response","results","message","useEffect","map","movie","to","title","Movies","api","fetch","json","Promise","reject","Error","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}